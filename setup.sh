#!/bin/bash

# Comprehensive setup script for Surf na Mao project (macOS/Linux)
# This script provides multiple options for running the project

echo "üèÑ Surf na Mao - Project Setup"
echo "================================"

# Function to check if Docker is available
check_docker() {
    if command -v docker &> /dev/null; then
        return 0
    else
        return 1
    fi
}

# Function to check if Node.js is available
check_node() {
    if command -v node &> /dev/null; then
        return 0
    else
        return 1
    fi
}

# Function to check if npm is available
check_npm() {
    if command -v npm &> /dev/null; then
        return 0
    else
        return 1
    fi
}

echo ""
echo "Checking system requirements..."

if check_docker; then
    echo "Docker: ‚úÖ Available"
    DOCKER_AVAILABLE=true
else
    echo "Docker: ‚ùå Not available"
    DOCKER_AVAILABLE=false
fi

if check_node; then
    echo "Node.js: ‚úÖ Available"
    NODE_AVAILABLE=true
else
    echo "Node.js: ‚ùå Not available"
    NODE_AVAILABLE=false
fi

if check_npm; then
    echo "npm: ‚úÖ Available"
    NPM_AVAILABLE=true
else
    echo "npm: ‚ùå Not available"
    NPM_AVAILABLE=false
fi

echo ""
echo "Choose your setup option:"
echo "1. üê≥ Docker (Recommended - Works offline)"
echo "2. üì¶ Local Node.js (Requires internet)"
echo "3. üìÅ Extract compressed dependencies (Offline)"
echo "4. ‚ùå Exit"

read -p "Enter your choice (1-4): " choice

case $choice in
    1)
        if [ "$DOCKER_AVAILABLE" = false ]; then
            echo "‚ùå Docker is not available. Please install Docker first."
            echo "Download from: https://www.docker.com/products/docker-desktop"
            exit 1
        fi
        
        echo ""
        echo "üê≥ Setting up with Docker..."
        
        # Build and run with Docker Compose
        echo "Building Docker image..."
        docker-compose -f docker-compose.dev.yml up --build
        
        if [ $? -eq 0 ]; then
            echo ""
            echo "‚úÖ Project is running at http://localhost:3000"
        else
            echo ""
            echo "‚ùå Docker setup failed. Check the error messages above."
        fi
        ;;
        
    2)
        if [ "$NODE_AVAILABLE" = false ] || [ "$NPM_AVAILABLE" = false ]; then
            echo "‚ùå Node.js or npm is not available. Please install Node.js first."
            echo "Download from: https://nodejs.org/"
            exit 1
        fi
        
        echo ""
        echo "üì¶ Setting up with local Node.js..."
        
        # Install dependencies
        echo "Installing dependencies..."
        npm install
        
        if [ $? -eq 0 ]; then
            echo ""
            echo "‚úÖ Dependencies installed successfully!"
            echo "Starting development server..."
            npm run dev
        else
            echo ""
            echo "‚ùå Failed to install dependencies. Check the error messages above."
        fi
        ;;
        
    3)
        echo ""
        echo "üìÅ Extracting compressed dependencies..."
        
        if [ -f "node_modules.tar.gz" ]; then
            # Remove existing node_modules if it exists
            if [ -d "node_modules" ]; then
                echo "Removing existing node_modules directory..."
                rm -rf node_modules
            fi
            
            # Extract the compressed archive
            echo "Extracting node_modules.tar.gz..."
            tar -xzf node_modules.tar.gz
            
            if [ -d "node_modules" ]; then
                echo ""
                echo "‚úÖ node_modules extracted successfully!"
                echo "Starting development server..."
                npm run dev
            else
                echo ""
                echo "‚ùå Extraction failed. Please check if tar is available on your system."
            fi
        else
            echo ""
            echo "‚ùå node_modules.tar.gz not found in the current directory."
            echo "Please make sure you're in the project root directory."
        fi
        ;;
        
    4)
        echo ""
        echo "üëã Goodbye!"
        exit 0
        ;;
        
    *)
        echo ""
        echo "‚ùå Invalid choice. Please enter a number between 1 and 4."
        exit 1
        ;;
esac 